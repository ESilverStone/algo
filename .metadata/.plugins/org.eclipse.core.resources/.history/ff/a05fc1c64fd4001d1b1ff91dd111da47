import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class p17070_파이프옮기기1 {
	
	public static int[][] map;
	public static int N;
	
	// 가로 0 세로 1 대각선 2
	static int[] vi = {0,1,1};
	static int[] vj = {1,0,1};
	
	boolean[] root;
	
	static void dfs(int startI, int startJ, int dirc) {
		
		rootSelector(startI, startJ, dirc);
		
		
		
		
	}
	
	
	static void rootSelector(int startI, int startJ, int dirc) {
		
		
		
	}


	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		N = Integer.parseInt(br.readLine());
		map = new int[N+1][N+1];
		
		for(int i=1; i<=N; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j=1; j<=N; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		root = new int[3];
		
		// 시작지점에서의 파이프의 끝 지점 + 처음 방향 가로(0)
		dfs(1,2,0);
		
		
		
		
	}
}
